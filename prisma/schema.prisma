generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Issue Model
model Issue {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  title            String   @db.String
  description      String   @db.String
  status           Status
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  assignedTo       User?    @relation("UserIssues", fields: [assignedToUserId], references: [id])
  assignedToUserId String?  @db.ObjectId
}

// Enum for Status
enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

// Account Model
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String  @db.String
  provider          String  @db.String
  providerAccountId String  @db.String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@index([provider, providerAccountId], map: "provider_account_unique")
  @@map("accounts")
}

// Session Model
model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @db.String
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

// User Model
model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?   @db.String
  email          String?   @unique @db.String
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  assignedIssues Issue[]   @relation("UserIssues") // Relation defined here

  @@map("users")
}

// Verification Token Model
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String   @db.String
  token      String   @db.String
  expires    DateTime

  @@index([identifier, token], map: "identifier_token_unique")
  @@map("verificationtokens")
}
